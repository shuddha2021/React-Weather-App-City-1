{"ast":null,"code":"var _jsxFileName = \"/Users/shuddha/Desktop/React Assignment/weather-app/src/components/Result.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = _ref => {\n  let {\n    weatherData,\n    loading\n  } = _ref;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n  if (!weatherData) {\n    return null; // Optional: You can customize the rendering for when there is no weather data available\n  }\n\n  const {\n    temperature,\n    description,\n    city\n  } = weatherData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", temperature, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Result","_ref","weatherData","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","description","city","_c","$RefreshReg$"],"sources":["/Users/shuddha/Desktop/React Assignment/weather-app/src/components/Result.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ResultProps {\n    weatherData: {\n        temperature: number;\n        description: string;\n        city: string;\n    } | null;\n    loading: boolean;\n}\n\nconst Result: React.FC<ResultProps> = ({ weatherData, loading }) => {\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (!weatherData) {\n        return null; // Optional: You can customize the rendering for when there is no weather data available\n    }\n\n    const { temperature, description, city } = weatherData;\n\n    return (\n        <div>\n            <h2>{city}</h2>\n            <p>Temperature: {temperature}Â°C</p>\n            <p>Description: {description}</p>\n        </div>\n    );\n};\n\nexport default Result;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,MAA6B,GAAGC,IAAA,IAA8B;EAAA,IAA7B;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3D,IAAIE,OAAO,EAAE;IACT,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAI,CAACN,WAAW,EAAE;IACd,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA,MAAM;IAAEO,WAAW;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGT,WAAW;EAEtD,oBACIH,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAKO;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfT,OAAA;MAAAK,QAAA,GAAG,eAAa,EAACK,WAAW,EAAC,OAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnCT,OAAA;MAAAK,QAAA,GAAG,eAAa,EAACM,WAAW;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd,CAAC;AAACI,EAAA,GAlBIZ,MAA6B;AAoBnC,eAAeA,MAAM;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}