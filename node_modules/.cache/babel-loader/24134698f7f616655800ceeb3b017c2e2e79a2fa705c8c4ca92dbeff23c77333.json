{"ast":null,"code":"var _jsxFileName = \"/Users/shuddha/Desktop/Weather_App_Uploaded/src/components/Result.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = _ref => {\n  let {\n    weatherData,\n    loading,\n    error,\n    color\n  } = _ref;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  if (!weatherData) {\n    return null;\n  }\n  const {\n    temperature,\n    feels_like,\n    wind_speed,\n    description,\n    city\n  } = weatherData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      style: {\n        backgroundColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current temp: \", temperature.toFixed(2), \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Feels like: \", feels_like.toFixed(2), \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wind speed: \", wind_speed.toFixed(2), \"mph\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Result","_ref","weatherData","loading","error","color","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","feels_like","wind_speed","description","city","className","style","backgroundColor","toFixed","_c","$RefreshReg$"],"sources":["/Users/shuddha/Desktop/Weather_App_Uploaded/src/components/Result.tsx"],"sourcesContent":["import React from 'react';\n\ninterface ResultProps {\n    weatherData: {\n        temperature: number;\n        feels_like: number;\n        wind_speed: number;\n        description: string;\n        city: string;\n    } | null;\n    loading: boolean;\n    error?: string | null;\n    color: string; // Add this line\n}\n\nconst Result: React.FC<ResultProps> = ({ weatherData, loading, error, color }) => {\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    if (!weatherData) {\n        return null;\n    }\n\n    const { temperature, feels_like, wind_speed, description, city } = weatherData;\n\n    return (\n        <div className=\"result\">\n            <div className=\"circle\" style={{ backgroundColor: color }}></div>\n            <h2>{city}</h2>\n            <p>Description: {description}</p>\n            <p>Current temp: {temperature.toFixed(2)}°F</p>\n            <p>Feels like: {feels_like.toFixed(2)}°F</p>\n            <p>Wind speed: {wind_speed.toFixed(2)}mph</p>\n        </div>\n    );\n};\n\nexport default Result;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,MAA6B,GAAGC,IAAA,IAA4C;EAAA,IAA3C;IAAEC,WAAW;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EACzE,IAAIE,OAAO,EAAE;IACT,oBAAOJ,OAAA;MAAAO,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIN,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAO,QAAA,EAAMF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,IAAI,CAACR,WAAW,EAAE;IACd,OAAO,IAAI;EACf;EAEA,MAAM;IAAES,WAAW;IAAEC,UAAU;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGb,WAAW;EAE9E,oBACIH,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAV,QAAA,gBACnBP,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,eAAe,EAAEb;MAAM;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjEX,OAAA;MAAAO,QAAA,EAAKS;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfX,OAAA;MAAAO,QAAA,GAAG,eAAa,EAACQ,WAAW;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCX,OAAA;MAAAO,QAAA,GAAG,gBAAc,EAACK,WAAW,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAC,OAAE;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC/CX,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACM,UAAU,CAACO,OAAO,CAAC,CAAC,CAAC,EAAC,OAAE;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5CX,OAAA;MAAAO,QAAA,GAAG,cAAY,EAACO,UAAU,CAACM,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAACU,EAAA,GAzBIpB,MAA6B;AA2BnC,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}